cmake_minimum_required(VERSION 3.20)
project(ChiralityRender VERSION 0.1.0)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
add_definitions(-D_DEBUG)
#add_subdirectory(thirdparty/assimp)
set(assimp_include thirdparty/assimp/include)
set(glm_include glm)
set(my_include inc)
include_directories(${PROJECT_SOURCE_DIR} ${assimp_include} ${glm_include} ${my_include})
aux_source_directory(${PROJECT_SOURCE_DIR}/src SRC_LIST)
set(executable_name "${PROJECT_NAME}_Debug")
file(COPY Shaders DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/../)
file(COPY Resources DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/../)

if(CMAKE_HOST_SYSTEM_NAME MATCHES "Windows")
    message(STATUS "Building for windows")
    set (CMAKE_C_COMPILER "D:/mingw64/bin/gcc.exe")
    set (CMAKE_CXX_COMPILER "D:/mingw64/bin/g++.exe")
    link_directories(${PROJECT_SOURCE_DIR}/lib)
    link_directories(${PROJECT_SOURCE_DIR}/OpenGL/Libs)
    target_link_libraries(ChiralityRender_Debug glew32s.lib glfw3.lib opengl32.lib)
    target_link_libraries(ChiralityRender_Debug assimp-vc142-mtd.lib)
    target_link_libraries(ChiralityRender_Debug zlibstaticd.lib)
elseif(CMAKE_HOST_SYSTEM_NAME MATCHES "Linux")
    MESSAGE(STATUS "Building for linux")
    link_libraries(GL GLEW glfw)
    link_directories(thirdparty/assimp/build/bin)
    link_libraries(assimp)
endif()

add_executable(${executable_name} ChiralityDemo.cpp ${SRC_LIST})